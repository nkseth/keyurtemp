name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  - develop

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

stages:
  - stage: ci_build_simpleAccounts_io
    displayName: CI Build for SimpleAccounts.io
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: build
        displayName: Build & Push SimpleAccounts.io Website
        timeoutInMinutes: 30

        steps:
          - task: CmdLine@2
            inputs:
              script: 'yarn install'

          - task: Cache@2
            inputs:
              key: '"yarn" | "$(Agent.OS)" | yarn.lock'
              restoreKeys: |
                yarn | "$(Agent.OS)"
              path: $(YARN_CACHE_FOLDER)
            displayName: Cache Yarn packages

          - script: yarn --frozen-lockfile

          - task: CmdLine@2
            inputs:
              script: 'yarn build'

          - task: Cache@2
            displayName: Cache task
            inputs:
              key: 'docker | "$(Agent.OS)" | cache'
              path: $(Pipeline.Workspace)/simpleaccounts-io-frontend-docker
              cacheHitVar: CACHE_RESTORED                #Variable to set to 'true' when the cache is restored

          - script: |
              docker load -i $(Pipeline.Workspace)/simpleaccounts-io-frontend-docker/simpleaccounts-io-frontend-docker-cache.tar
            displayName: Docker restore
            condition: and(not(canceled()), eq(variables.CACHE_RESTORED, 'true'))

          - task: Docker@2
            displayName: Docker Build & Push
            inputs:
              containerRegistry: 'DataInnAzureContainerRegistryConnection'
              repository: 'simpleaccounts-io-strapi-frontend'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: |
                $(tag)

          - script: |
              mkdir -p $(Pipeline.Workspace)/simpleaccounts-io-frontend-docker
              docker save -o $(Pipeline.Workspace)/simpleaccounts-io-frontend-docker/simpleaccounts-io-frontend-docker-cache.tar datainn.azurecr.io/simpleaccounts-io-strapi-frontend:$(tag)
            displayName: Docker save
            condition: and(not(canceled()), or(failed(), ne(variables.CACHE_RESTORED, 'true')))

